name: Actualizar Contexto y Crear Pull Request

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'contexto_repo.txt' # Evita que el workflow se dispare por cambios en este archivo

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Clonar el repositorio
        uses: actions/checkout@v3

      - name: 📝 Generar lista de archivos y contenido (Filtrado)
        run: |
          echo "### Estructura de archivos y carpetas ###" > contexto_repo.txt
          tree -a -I '.git|node_modules|package-lock.json' >> contexto_repo.txt

          echo "\n### Contenido de archivos clave ###" >> contexto_repo.txt
          find . -type f \( \
            -name ".env.example" \
            -o -name "package.json" \
            -o -name "tsconfig.json" \
            -o -name "tsconfig.build.json" \
            -o -name "nest-cli.json" \
            -o -name "docker-compose.yml" \
            -o -name "ormconfig.ts" \
            -o -name ".eslintrc.js" \
            -o -name ".prettierrc" \
            -o -name ".gitignore" \
            -o -path "./.vscode/extensions.json" \
            -o -path "./.vscode/settings.json" \
            -o -path "./.github/workflows/generate_context.yml" \
            -o -name "README.md" \
            \) \
            -exec echo -e "\n----- {} -----\n" \; -exec cat {} \; >> contexto_repo.txt

      - name: 🔄 Crear nueva rama y hacer commit
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          # Generar un nombre único para la nueva rama
          BRANCH_NAME="update-context-$(date +%Y%m%d%H%M%S)"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV  # Guardar variable en el entorno

          git checkout -b $BRANCH_NAME
          git add contexto_repo.txt
          git commit -m "🔄 Actualización automática del contexto del repo" || exit 0
          git push origin $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔀 Crear Pull Request automático
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ env.BRANCH_NAME }} # Usar la rama generada
          destination_branch: 'main'
          pr_title: '🔄 Actualización automática del contexto del repo'
          pr_body: 'Este Pull Request fue generado automáticamente para actualizar `contexto_repo.txt` con la última estructura y contenido del repositorio.'
          pr_label: 'automated-pr'
          github_token: ${{ secrets.GITHUB_TOKEN }}
